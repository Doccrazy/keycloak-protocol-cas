name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: https://solocal.jfrog.io/solocal/api/npm/npm/
          always-auth: true
          scope: '@bridge'

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        run: |
          ./gradlew build

      - name: Test
        run: |
          mkdir build/docker
          cd build/docker
          cp ../libs/*.jar ./keycloak-protocol-cas.jar
          echo "FROM quay.io/keycloak/keycloak:7.0.0" > Dockerfile
          echo "ADD keycloak-protocol-cas.jar /opt/jboss/keycloak/standalone/deployments/" >> Dockerfile
          docker build -t doccrazy/keycloak-cas .
          cd -

          docker run -d -p 127.0.0.1:8080:8080 --name keycloak -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin doccrazy/keycloak-cas
          sleep 60
          docker logs keycloak &&
          docker exec -t keycloak /opt/jboss/keycloak/bin/kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin --password admin
          docker exec -t keycloak /opt/jboss/keycloak/bin/kcadm.sh create clients -r master -s clientId=test -s protocol=cas -s enabled=true -s publicClient=true -s 'redirectUris=["http://localhost/*"]' -s baseUrl=http://localhost -s adminUrl=http://localhost
          docker exec -t keycloak /opt/jboss/keycloak/bin/kcadm.sh get serverinfo -r master --fields "providers(login-protocol(providers(cas)))" | grep cas
          integrationTest/suite.sh

      - name: 'Release'
        run: |
          mkdir -p .github-assets/
          cp build/libs/keycloak-protocol-cas-*.jar .github-assets/keycloak-protocol-cas.jar
          npx -p @bridge/semantic-release-config gh-actions-bridge-semantic-release
        env:
          SEMVER_RELEASE_TYPE: KEYCLOAK_PLUGIN
          ACTION_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.CI_GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
